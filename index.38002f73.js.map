{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar container = document.querySelector(\".container\");\nvar tableSizeChangerButtons = {\n    appendRow: container.querySelector(\".append-row\"),\n    removeRow: container.querySelector(\".remove-row\"),\n    appendColumn: container.querySelector(\".append-column\"),\n    removeColumn: container.querySelector(\".remove-column\")\n};\nvar tableBody = document.querySelector(\".field\").tBodies[0] || document.querySelector(\".field\");\nvar extremumTableSize = {\n    min: 2,\n    max: 10\n};\ncontainer.addEventListener(\"click\", function(e) {\n    var button = e.target;\n    if (button.classList.contains(\"button\")) switch(true){\n        case button.classList.contains(\"append-row\"):\n            appendRow(tableBody, extremumTableSize, button, tableSizeChangerButtons.removeRow);\n            break;\n        case button.classList.contains(\"remove-row\"):\n            removeRow(tableBody, extremumTableSize, button, tableSizeChangerButtons.appendRow);\n            break;\n        case button.classList.contains(\"append-column\"):\n            appendColumn(tableBody, extremumTableSize, button, tableSizeChangerButtons.removeColumn);\n            break;\n        case button.classList.contains(\"remove-column\"):\n            removeColumn(tableBody, extremumTableSize, button, tableSizeChangerButtons.appendColumn);\n            break;\n        default:\n            break;\n    }\n});\nfunction appendRow(tab, extremumSize, appendButton, removeButton) {\n    if (tab.rows.length < extremumSize.max) tab.appendChild(tab.rows[0].cloneNode(\"deep\"));\n    if (tab.rows.length >= extremumSize.max) appendButton.disabled = true;\n    if (removeButton.disabled && tab.rows.length > extremumSize.min) removeButton.disabled = false;\n}\nfunction removeRow(tab, extremumSize, removeButton, appendButton) {\n    if (tab.rows.length > extremumSize.min) tab.lastElementChild.remove();\n    if (tab.rows.length <= extremumSize.min) removeButton.disabled = true;\n    if (appendButton.disabled && tab.rows.length > extremumSize.min) appendButton.disabled = false;\n}\nfunction appendColumn(tab, extremumSize, appendButton, removeButton) {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    if (tab.rows[0].cells.length < extremumSize.max) try {\n        for(var _iterator = tab.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.appendChild(row.firstElementChild.cloneNode(\"deep\"));\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    if (tab.rows[0].cells.length >= extremumSize.max) appendButton.disabled = true;\n    if (removeButton.disabled && tab.rows[0].cells.length > extremumSize.min) removeButton.disabled = false;\n}\nfunction removeColumn(tab, extremumSize, removeButton, appendButton) {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    if (tab.rows[0].cells.length > extremumSize.min) try {\n        for(var _iterator = tab.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.lastElementChild.remove();\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    if (tab.rows[0].cells.length <= extremumSize.min) removeButton.disabled = true;\n    if (appendButton.disabled && tab.rows[0].cells.length > extremumSize.min) appendButton.disabled = false;\n}\n\n//# sourceMappingURL=index.38002f73.js.map\n","'use strict';\n\nconst container = document.querySelector('.container');\nconst tableSizeChangerButtons = {\n  appendRow: container.querySelector('.append-row'),\n  removeRow: container.querySelector('.remove-row'),\n  appendColumn: container.querySelector('.append-column'),\n  removeColumn: container.querySelector('.remove-column'),\n};\nconst tableBody =\n  document.querySelector('.field').tBodies[0] ||\n  document.querySelector('.field');\nconst extremumTableSize = {\n  min: 2,\n  max: 10,\n};\n\ncontainer.addEventListener('click', (e) => {\n  const button = e.target;\n\n  if (button.classList.contains('button')) {\n    switch (true) {\n      case button.classList.contains('append-row'):\n        appendRow(\n          tableBody,\n          extremumTableSize,\n          button,\n          tableSizeChangerButtons.removeRow,\n        );\n\n        break;\n      case button.classList.contains('remove-row'):\n        removeRow(\n          tableBody,\n          extremumTableSize,\n          button,\n          tableSizeChangerButtons.appendRow,\n        );\n\n        break;\n      case button.classList.contains('append-column'):\n        appendColumn(\n          tableBody,\n          extremumTableSize,\n          button,\n          tableSizeChangerButtons.removeColumn,\n        );\n\n        break;\n      case button.classList.contains('remove-column'):\n        removeColumn(\n          tableBody,\n          extremumTableSize,\n          button,\n          tableSizeChangerButtons.appendColumn,\n        );\n\n        break;\n      default:\n        break;\n    }\n  }\n});\n\nfunction appendRow(tab, extremumSize, appendButton, removeButton) {\n  if (tab.rows.length < extremumSize.max) {\n    tab.appendChild(tab.rows[0].cloneNode('deep'));\n  }\n\n  if (tab.rows.length >= extremumSize.max) {\n    appendButton.disabled = true;\n  }\n\n  if (removeButton.disabled && tab.rows.length > extremumSize.min) {\n    removeButton.disabled = false;\n  }\n}\n\nfunction removeRow(tab, extremumSize, removeButton, appendButton) {\n  if (tab.rows.length > extremumSize.min) {\n    tab.lastElementChild.remove();\n  }\n\n  if (tab.rows.length <= extremumSize.min) {\n    removeButton.disabled = true;\n  }\n\n  if (appendButton.disabled && tab.rows.length > extremumSize.min) {\n    appendButton.disabled = false;\n  }\n}\n\nfunction appendColumn(tab, extremumSize, appendButton, removeButton) {\n  if (tab.rows[0].cells.length < extremumSize.max) {\n    for (const row of tab.rows) {\n      row.appendChild(row.firstElementChild.cloneNode('deep'));\n    }\n  }\n\n  if (tab.rows[0].cells.length >= extremumSize.max) {\n    appendButton.disabled = true;\n  }\n\n  if (removeButton.disabled && tab.rows[0].cells.length > extremumSize.min) {\n    removeButton.disabled = false;\n  }\n}\n\nfunction removeColumn(tab, extremumSize, removeButton, appendButton) {\n  if (tab.rows[0].cells.length > extremumSize.min) {\n    for (const row of tab.rows) {\n      row.lastElementChild.remove();\n    }\n  }\n\n  if (tab.rows[0].cells.length <= extremumSize.min) {\n    removeButton.disabled = true;\n  }\n\n  if (appendButton.disabled && tab.rows[0].cells.length > extremumSize.min) {\n    appendButton.disabled = false;\n  }\n}\n"],"names":["container","document","querySelector","tableSizeChangerButtons","appendRow","removeRow","appendColumn","removeColumn","tableBody","tBodies","extremumTableSize","min","max","addEventListener","e","removeButton","appendButton","button","target","classList","contains","tab","rows","length","extremumSize","appendChild","cloneNode","disabled","lastElementChild","remove","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","cells","_step","_iterator","Symbol","iterator","next","done","row","value","firstElementChild","err","return"],"version":3,"file":"index.38002f73.js.map"}